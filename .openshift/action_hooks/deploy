#!/bin/bash

# This deploy hook gets executed after dependencies are resolved and the
# build hook has been run but before the application has been started back
# up again.  This script gets executed directly, so it could be python, php,
# ruby, etc.

# Don't forget to "chmod +x .openshift/action_hooks/deploy"

export DATA_DIR=${OPENSHIFT_DATA_DIR%/}
export REPO_DIR=${OPENSHIFT_REPO_DIR%/}

export MY_PHPCOMPOSER=$DATA_DIR/composer.phar
export NODE_MODULES=$REPO_DIR/node_modules

export YII_INIT=true
export YII_MIGRATE=true

function createUploadsDir() {
    if [ -d "$DATA_DIR/public/uploads" ]; then

        echo "--> Creating DataDir uploads directory"
        mkdir "$DATA_DIR/public/uploads"

        if [ -d "$DATA_DIR/public/uploads/images"]; then
            mkdir "$DATA_DIR/public/uploads/images"
        fi

        if [ -d "$DATA_DIR/public/uploads/videos"]; then
            mkdir "$DATA_DIR/public/uploads/videos"
        fi

        if [ -d "$DATA_DIR/public/uploads/files"]; then
            mkdir "$DATA_DIR/public/uploads/files"
        fi

    fi

    echo "--> Creating Frontend (uploads) Symlink"
    ln -s "$DATA_DIR/public/uploads" "$REPO_DIR/frontend/web/uploads"
}

function repeatSymbol {
    symbol=$1
    count=$2
    for ((i=1; i<=count; i++)); do
        echo -n "="
    done
}

function printBanner {
    message=$1
    count=$((${#message} + 8))

    printf "\n"
    printf "\n"
    repeatSymbol "=" $count

    printf "\n=== $message ===\n"

    repeatSymbol "=" $count
    printf "\n"
    printf "\n"

}

function downloadComposer {
    # if composer does not exist, download it
    echo "--> Checking for Composer"
    if [ ! -f $MY_PHPCOMPOSER ]; then
        cd $DATA_DIR
        echo "--> Composer not found..."
        echo "--> Downloading composer..."
        php -r "readfile('https://getcomposer.org/installer');" | php
        cd $REPO_DIR
    else
        echo "--> Composer already exists!"
    fi
}

function updateComposerVersion {
    echo "---> Updating Composer"
    # self update composer
    $MY_PHPCOMPOSER clear-cache
    $MY_PHPCOMPOSER -n -q self-update
    echo "---> Done!"
}

function installComposerScripts {
    echo "--> Installing Composer Scripts"
    $MY_PHPCOMPOSER install
    echo "---> Done!"
}

function updateComposerScripts {
    echo "--> Updating Composer Scripts"
    $MY_PHPCOMPOSER update
    echo "---> Done!"
}

function getComposerVersion {
    # already returns "Composer version" at beginning of string
    echo "---> $($MY_PHPCOMPOSER --version)"
}

function getGitVersion {
    echo "--> $(git --version)"
}

function fixNPM {
    echo " ---> Fixing NPM Paths ..."
    cd $OPENSHIFT_DATA_DIR
    echo "export NPM_CONFIG_USERCONFIG=$OPENSHIFT_HOMEDIR/app-root/build-dependencies/.npmrc" > $OPENSHIFT_DATA_DIR/.env
    touch $OPENSHIFT_DATA_DIR/.env
    npm config set cache $OPENSHIFT_HOMEDIR/app-root/build-dependencies/.npm
    echo " ---> Fixed NPM Paths!"
}

function installNPM {
    echo " ---> Installing NPM"
    cd $REPO_DIR
    npm install
}

function runGruntScript {
    if [ -f "$REPO_DIR/Gruntfile.js" ]; then
        echo "---> Running Grunt build..."
        cd $REPO_DIR

        if [ -d "$NODE_MODULES/grunt-cli/bin" ]; then
            echo " -- node_modules/grunt-cli/bin found!"
            $NODE_MODULES/grunt-cli/bin/grunt build
        elif [ -d "$NODE_MODULES/.bin" ]; then
            echo " -- node_modules/.bin found!"
            $NODE_MODULES/.bin/grunt build
        fi

        echo "---> Done!"
    fi
}

# --------- START CODE ----------


printBanner "Start Action Hook: Deploy"

echo "OpenShift RepoDir: $REPO_DIR"
echo "OpenShift DataDir: $DATA_DIR"
echo "Composer Location: $MY_PHPCOMPOSER"

if [ -f $MY_PHPCOMPOSER ]; then
    echo " - Installed? Yes"
else
    echo " - Installed? No"
fi

downloadComposer
updateComposerVersion
getComposerVersion
getGitVersion

$MY_PHPCOMPOSER global require "fxp/composer-asset-plugin:^1.2.0"

echo "--> Going back to REPO_DIR"
cd $REPO_DIR

# Run composer install now, because composer.json runs Yii init in dev mode by default
echo "--> Run Composer install without dev"
$MY_PHPCOMPOSER install --no-dev --no-scripts


##########################################
## Handle Yii2 advanced/basic detection ##
##########################################

echo "--> START: Yii2 Custom Handling"
# Time for Yii2 Fun
if [ -d "$REPO_DIR/frontend" ] && [ -d "$REPO_DIR/backend" ]; then

    # Yii2 Advanced App
    echo "--> Yii Advanced App Detected"

    # init for Yii2 Advanced Application
    if [ $YII_INIT == true ]; then
        echo "--> Running Yii Init"
        php init --env=Demo --overwrite=All
    fi

    if [ $YII_MIGRATE == true ]; then
        echo "--> Running Yii Migrate"
        php yii migrate --interactive=0
    fi

    echo "--> Creating Mainsite Symlink"
    ln -s "$REPO_DIR/mainsite/web" "$REPO_DIR/web"

    echo "--> Creating Frontend (members) Symlink"
    ln -s "$REPO_DIR/frontend/web" "$REPO_DIR/mainsite/web/members"

    echo "--> Creating Backend (admin) Symlink"
    ln -s "$REPO_DIR/backend/web" "$REPO_DIR/mainsite/web/admin"

    #createUploadsDir

else

    # Yii2 Basic App
    echo "--> Yii Basic App Detected"

    if [ $YII_MIGRATE == true ]; then
        echo "--> Running Yii Migrate"
        php yii migrate --interactive=0
    fi

fi

echo "--> END: Yii2 Custom Handling"



#######################################
## End Yii2 advanced/basic detection ##
#######################################


installNPM
runGruntScript

printBanner "End Action Hook: Deploy"
